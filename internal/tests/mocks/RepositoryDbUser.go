// Code generated by mockery v2.20.0. DO NOT EDIT.

package mocks

import (
	user "ads/internal/user"

	mock "github.com/stretchr/testify/mock"
)

// RepositoryDbUser is an autogenerated mock type for the RepositoryDbUser type
type RepositoryDbUser struct {
	mock.Mock
}

// CreateUserDb provides a mock function with given fields: _a0
func (_m *RepositoryDbUser) CreateUserDb(_a0 user.UserDb) (int, error) {
	ret := _m.Called(_a0)

	var r0 int
	var r1 error
	if rf, ok := ret.Get(0).(func(user.UserDb) (int, error)); ok {
		return rf(_a0)
	}
	if rf, ok := ret.Get(0).(func(user.UserDb) int); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(int)
	}

	if rf, ok := ret.Get(1).(func(user.UserDb) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewRepositoryDbUser interface {
	mock.TestingT
	Cleanup(func())
}

// NewRepositoryDbUser creates a new instance of RepositoryDbUser. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewRepositoryDbUser(t mockConstructorTestingTNewRepositoryDbUser) *RepositoryDbUser {
	mock := &RepositoryDbUser{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
